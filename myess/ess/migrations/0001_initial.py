# Generated by Django 3.2.14 on 2022-12-12 22:20

import django.contrib.auth.models
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Project",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "pname",
                    models.CharField(
                        blank=True, max_length=128, unique=True, verbose_name="项目名字"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Task",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("uname", models.CharField(max_length=20, verbose_name="用户名")),
                (
                    "pname",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("50-杂物", "50-杂物"),
                            ("50-脏污", "50-脏污"),
                            ("50-脚垫", "50-脚垫"),
                            ("50-地灯", "50-地灯"),
                            ("50-扶梯", "50-扶梯"),
                            ("50-电线", "50-电线"),
                            ("50-地毯", "50-地毯"),
                            ("50-巡检", "50-巡检"),
                            ("50-室内可通行", "50-室内可通行"),
                            ("50/75-行人扶梯一米栏", "50/75-行人扶梯一米栏"),
                            ("75-车库漏水", "75-车库漏水"),
                            ("75-车库垃圾", "75-车库垃圾"),
                            ("75-人脸打码", "75-人脸打码"),
                            ("75-地面物体", "75-地面物体"),
                            ("75-车库车辆行人", "75-车库车辆行人"),
                            ("75-车库车辆行人-伪3D", "75-车库车辆行人-伪3D"),
                            ("75-车库车辆行人-伪3D", "75-车库车辆行人-真3D"),
                            ("S线-电线", "S线-电线"),
                            ("S线-脚垫", "S线-脚垫"),
                            ("S线-地毯", "S线-地毯"),
                            ("S线-脏污", "S线-脏污"),
                            ("S线-杂物", "S线-杂物"),
                            ("S线-地灯", "S线-地灯"),
                            ("S线-扶梯", "S线-扶梯"),
                            ("S线-巡检", "S线-巡检"),
                            ("S线-回流数据", "S线-回流数据"),
                            ("S线-行人扶梯一米栏", "S线-行人扶梯一米栏"),
                            ("S线-可通行区域", "S线-可通行区域"),
                            ("AIOT-清洁行为", "AIOT-清洁行为"),
                            ("111-室外车辆行人", "111-室外车辆行人"),
                            ("X线-行人", "X线-行人"),
                            ("环卫车-红绿灯", "环卫车-红绿灯"),
                            ("环卫车-绿化带道路", "环卫车-绿化带道路"),
                            ("环卫车-环视车辆行人", "环卫车-环视车辆行人"),
                            ("环卫车-车辆行人障碍物&路沿", "环卫车-车辆行人障碍物&路沿"),
                        ],
                        max_length=100,
                        null=True,
                        verbose_name="项目类型",
                    ),
                ),
                (
                    "waibao",
                    models.CharField(
                        blank=True,
                        choices=[("高仙", "高仙"), ("倍赛", "倍赛"), ("龙猫", "龙猫")],
                        max_length=10,
                        null=True,
                        verbose_name="数据标注方",
                    ),
                ),
                (
                    "task_id",
                    models.BigIntegerField(blank=True, null=True, verbose_name="任务ID"),
                ),
                ("dtime", models.CharField(max_length=20, verbose_name="当天日期")),
                (
                    "kinds",
                    models.CharField(
                        choices=[
                            ("2D框标注", "2D框标注"),
                            ("2D分割标注", "2D分割标注"),
                            ("属性标注", "属性标注"),
                            ("视频标注", "视频标注"),
                            ("2.5D点云标注", "2.5D点云标注"),
                            ("审核", "审核"),
                            ("筛选", "筛选"),
                        ],
                        max_length=20,
                        verbose_name="任务类型",
                    ),
                ),
                (
                    "pnums",
                    models.IntegerField(blank=True, null=True, verbose_name="图片数量"),
                ),
                (
                    "knums",
                    models.CharField(
                        blank=True, max_length=128, null=True, verbose_name="框数"
                    ),
                ),
                ("ptimes", models.FloatField(verbose_name="工时")),
            ],
        ),
        migrations.CreateModel(
            name="Tkinds",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "kinds",
                    models.CharField(max_length=20, unique=True, verbose_name="任务类型"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Waibao",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "pname",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("50-杂物", "50-杂物"),
                            ("50-脏污", "50-脏污"),
                            ("50-脚垫", "50-脚垫"),
                            ("50-地灯", "50-地灯"),
                            ("50-扶梯", "50-扶梯"),
                            ("50-电线", "50-电线"),
                            ("50-地毯", "50-地毯"),
                            ("50-巡检", "50-巡检"),
                            ("50-室内可通行", "50-室内可通行"),
                            ("50/75-行人扶梯一米栏", "50/75-行人扶梯一米栏"),
                            ("75-车库漏水", "75-车库漏水"),
                            ("75-车库垃圾", "75-车库垃圾"),
                            ("75-人脸打码", "75-人脸打码"),
                            ("75-地面物体", "75-地面物体"),
                            ("75-车库车辆行人", "75-车库车辆行人"),
                            ("75-车库车辆行人-伪3D", "75-车库车辆行人-伪3D"),
                            ("75-车库车辆行人-伪3D", "75-车库车辆行人-真3D"),
                            ("S线-电线", "S线-电线"),
                            ("S线-脚垫", "S线-脚垫"),
                            ("S线-地毯", "S线-地毯"),
                            ("S线-脏污", "S线-脏污"),
                            ("S线-杂物", "S线-杂物"),
                            ("S线-地灯", "S线-地灯"),
                            ("S线-扶梯", "S线-扶梯"),
                            ("S线-巡检", "S线-巡检"),
                            ("S线-回流数据", "S线-回流数据"),
                            ("S线-行人扶梯一米栏", "S线-行人扶梯一米栏"),
                            ("S线-可通行区域", "S线-可通行区域"),
                            ("AIOT-清洁行为", "AIOT-清洁行为"),
                            ("111-室外车辆行人", "111-室外车辆行人"),
                            ("X线-行人", "X线-行人"),
                            ("环卫车-红绿灯", "环卫车-红绿灯"),
                            ("环卫车-绿化带道路", "环卫车-绿化带道路"),
                            ("环卫车-环视车辆行人", "环卫车-环视车辆行人"),
                            ("环卫车-车辆行人障碍物&路沿", "环卫车-车辆行人障碍物&路沿"),
                        ],
                        max_length=128,
                        verbose_name="项目名字",
                    ),
                ),
                (
                    "get_data_time",
                    models.CharField(
                        max_length=20, null=True, verbose_name="外包收到数据的日期"
                    ),
                ),
                ("pnums", models.IntegerField(blank=True, verbose_name="图片数量")),
                ("knums", models.IntegerField(blank=True, verbose_name="框数")),
                (
                    "settlement_method",
                    models.CharField(blank=True, max_length=128, verbose_name="结算方式"),
                ),
                ("unit_price", models.FloatField(blank=True, verbose_name="单价")),
                (
                    "wb_name",
                    models.CharField(blank=True, max_length=128, verbose_name="外包名字"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Waibaos",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=128, unique=True, verbose_name="外包名字")),
            ],
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        max_length=20,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                        verbose_name="用户名",
                    ),
                ),
                (
                    "zh_uname",
                    models.CharField(blank=True, max_length=20, verbose_name="姓名"),
                ),
                (
                    "email",
                    models.EmailField(blank=True, max_length=256, verbose_name="邮箱"),
                ),
                ("password", models.CharField(max_length=128, verbose_name="密码")),
                (
                    "power",
                    models.CharField(
                        blank=True,
                        choices=[("1", "1"), ("2", "2"), ("3", "3"), ("4", "4")],
                        default=4,
                        max_length=1,
                        verbose_name="权限",
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.Group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.Permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[("objects", django.contrib.auth.models.UserManager()),],
        ),
    ]
